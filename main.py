import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton, FSInputFile

API_TOKEN = '7091257664:AAFYbb09SL99Y15b3iS3gUAemSs9gDnySgg'

bot = Bot(token=API_TOKEN)
dp = Dispatcher()

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—ã –≤ –º–µ–Ω—é
async def set_commands(bot: Bot):
    commands = [
        types.BotCommand(command="/start", description="–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ | –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    ]
    await bot.set_my_commands(commands)

@dp.message(Command("start"))
async def start_command(message: types.Message):
    user_name = message.from_user.first_name  # –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    gif_path = 'media/Welcome.gif'  # –û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å –∫ GIF

    # –°–æ–∑–¥–∞–µ–º –æ–±—ã—á–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –ø–æ–¥ –ø–æ–ª–µ–º –≤–≤–æ–¥–∞
    keyboard = [
        [InlineKeyboardButton(text="üí≤ –ö—É—Ä—Å –¥–æ–ª–ª–∞—Ä–∞", callback_data="dollar_cost")],
        [InlineKeyboardButton(text="üí± –í—ã–±—Ä–∞—Ç—å –ø–∞—Ä—É –æ–±–º–µ–Ω–∞", callback_data="dollar_cost")],
        [InlineKeyboardButton(text="üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å–æ –º–Ω–æ–π", url="https://example.com")],
        [
            InlineKeyboardButton(text="üë§ –ü—Ä–æ—Ñ–∏–ª—å", callback_data="dollar_cost"),
            InlineKeyboardButton(text="‚ÑπÔ∏è –û FoyDyabaBot", callback_data="dollar_cost")
         ]  # –î–≤–µ –∫–Ω–æ–ø–∫–∏ –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
    ]
    inline_keyboard = InlineKeyboardMarkup(row_width=2, inline_keyboard=keyboard)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ–±—ã—á–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏
    gif_file = FSInputFile(gif_path)
    await message.answer_animation(animation=gif_file, caption=f"üëã –†–∞–¥ –≤–∏–¥–µ—Ç—å —Ç–µ–±—è, @{user_name}", reply_markup=inline_keyboard)

# –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏
@dp.callback_query()
async def handle_callback(query: types.CallbackQuery):
    await query.message.answer(f"–í—ã –≤—ã–±—Ä–∞–ª–∏ {query.data}")
    await query.answer()  # –ß—Ç–æ–±—ã –∑–∞–∫—Ä—ã—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏

async def main():
    try:
        await set_commands(bot)
        await dp.start_polling(bot)
    except Exception as e:
        print(f"Polling error: {e}")
    finally:
        await bot.session.close()

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except (KeyboardInterrupt, SystemExit):
        print("Bot stopped")
